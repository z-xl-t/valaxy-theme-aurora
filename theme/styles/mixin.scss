@use './vars.scss' as *;
@use './animation.scss' as *;

// 基本布局
@mixin pc-layout {
  @media screen and (min-width: 960px) {
    @content;
  }
}

@mixin sp-layout {
  @media screen and (max-width: 959px) {
    @content;
  }
}


// 滚动条
@mixin scrollBar {
  ::-webkit-scrollbar {
    width: 2px;
    height: 2px;
    background-color: transparent;
  }

  ::-webkit-scrollbar-thumb {
    border-radius: 2px;
    background-color: white;

  }

  ::-webkit-scrollbar-track {
    background-color: white;
  }
}

// clip 条

@mixin clip {
  color: white;
  text-transform: capitalize;
  background-image: linear-gradient(to right, $text-clip-start 10%, $text-clip-center 40%, $text-clip-end 70%);
  background-size: auto auto;
  background-clip: border-box;
  background-size: 200% auto;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  -webkit-background-clip: text;
  animation: textclip 3s linear infinite;
}

// K卡片轮廓

@mixin card {
  border-radius: 3px;
  background-color: $bg-white-deep;

  @include pc-layout() {

    box-shadow: $card-shadow-base;
  }

  @include sp-layout() {
    box-shadow: $card-shadow-light;
  }
}

@mixin card-light {
  border-radius: 3px;
  background-color: $bg-white-dim;
  box-shadow: $card-shadow-light;
  transition: $transition-base;

  @include pc-layout() {
    &:hover {
      transform: translateY(-4px);
      box-shadow: $card-shadow-light-hover;
    }
  }
}

@mixin card-page() {
  border-radius: 3px;

  @include pc-layout() {
    background-color: $bg-white-dim;
    box-shadow: $card-shadow-base;
  }
}

// 绝对/固定 定位， 宽高占满父元素

@mixin fillParent($typeof, $zIndex) {
  position: $typeof;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: $zIndex;
}

// 居中 主轴水平
@mixin flexCenter() {

  display: flex;
  justify-content: center;
  align-items: center;
}

// 居中 主轴竖直
@mixin flexColumnCenter() {

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

@mixin link {
  position: relative;

  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 1.5px;
    word-wrap: break-word;
    background-color: currentColor;
    transform: scaleX(0);
    transform-origin: bottom right;
    transition: transform 0.3s ease-out;
  }

  &:hover {
    &::after {
      transform-origin: bottom left;
      transform: scaleX(1);
    }
  }
}